{"ast":null,"code":"var _jsxFileName = \"C:\\\\exercises\\\\testmoviedb\\\\React RMDB - Start Here\\\\src\\\\components\\\\Movie\\\\Movie.js\";\nimport React from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        if (result.status_code) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movie: result\n          }, () => {// ... then fetch actors in the setState callback function\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); //First fetch the movie\n\n    const endpoint = \"\".concat(API_URL, \"movie/\").concat(this.props.match.params.movieId, \"?api_key\").concat(API_KEY, \"&language=en-US\");\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(MovieInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(MovieInfoBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(FourColGrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["C:\\exercises\\testmoviedb\\React RMDB - Start Here\\src\\components\\Movie\\Movie.js"],"names":["React","API_URL","API_KEY","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","Component","state","movie","actors","directors","loading","fetchItems","endpoint","fetch","then","result","json","status_code","setState","componentDidMount","props","match","params","movieId","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,cAA/B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBT,KAAK,CAACU,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,MAAM,EAAE,IAFJ;AAGJC,MAAAA,SAAS,EAAE,EAHP;AAIJC,MAAAA,OAAO,EAAE;AAJL,KADwB;;AAAA,SAqBhCC,UArBgC,GAqBlBC,QAAD,IAAa;AACtBC,MAAAA,KAAK,CAACD,QAAD,CAAL,CACKE,IADL,CACUC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADpB,EAEKF,IAFL,CAEUC,MAAM,IAAI;AAEZ,YAAGA,MAAM,CAACE,WAAV,EAAsB;AAClB,eAAKC,QAAL,CAAc;AAACR,YAAAA,OAAO,EAAE;AAAV,WAAd;AACH,SAFD,MAEK;AACD,eAAKQ,QAAL,CAAc;AAACX,YAAAA,KAAK,EAAEQ;AAAR,WAAd,EAA+B,MAAK,CAChC;AAEH,WAHD;AAIH;AACJ,OAZL;AAiBH,KAvC+B;AAAA;;AAShCI,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,QAAL,CAAc;AAACR,MAAAA,OAAO,EAAE;AAAV,KAAd,EADgB,CAGhB;;AACA,UAAME,QAAQ,aAAMhB,OAAN,mBAAsB,KAAKwB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAA9C,qBAAgE1B,OAAhE,oBAAd;AAEA,SAAKc,UAAL,CAAgBC,QAAhB;AAIH;;AAsBDY,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AASH;;AAnD+B;;AAsDpC,eAAepB,KAAf","sourcesContent":["import React from 'react'\r\nimport {API_URL, API_KEY} from '../../config'\r\nimport Navigation from '../elements/Navigation/Navigation'\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo'\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar'\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid'\r\nimport Actor from '../elements/Actor/Actor'\r\nimport Spinner from '../elements/Spinner/Spinner'\r\nimport './Movie.css'\r\n\r\nclass Movie extends React.Component {\r\n    state = {\r\n        movie: null,\r\n        actors: null,\r\n        directors: [],\r\n        loading: false\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true})\r\n\r\n        //First fetch the movie\r\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key${API_KEY}&language=en-US`\r\n        \r\n        this.fetchItems(endpoint)\r\n\r\n\r\n    \r\n    }\r\n\r\n    fetchItems = (endpoint)=> {\r\n        fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                \r\n                if(result.status_code){\r\n                    this.setState({loading: false})\r\n                }else{\r\n                    this.setState({movie: result}, ()=> {\r\n                        // ... then fetch actors in the setState callback function\r\n                        \r\n                    })\r\n                }\r\n            })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"rmdb-movie\">\r\n                <Navigation/>\r\n                <MovieInfo/>\r\n                <MovieInfoBar/>\r\n                <FourColGrid/>\r\n                <Spinner/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}