{"ast":null,"code":"var _jsxFileName = \"C:\\\\exercises\\\\testmoviedb\\\\React RMDB - Start Here\\\\src\\\\components\\\\Home\\\\Home.js\";\nimport React from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../config\";\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      heroimage: null,\n      loading: false,\n      currentPage: 0,\n      totalPages: 0,\n      searchTerm: ''\n    };\n\n    this.searchItems = searchTerm => {\n      let endpoint = '';\n      this.setState({\n        movies: [],\n        loading: true,\n        searchTerm\n      });\n\n      if (searchTerm === '') {\n        endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=1\");\n      } else {\n        endpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&language=en-US&query=\").concat(searchTerm);\n      }\n\n      this.fetchItems(endpoint);\n    };\n\n    this.loadMoreItems = () => {\n      let endpoint = '';\n      this.setState({\n        loading: true\n      });\n\n      if (this.state.searchTerm === '') {\n        endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=\").concat(this.state.currentPage + 1);\n      } else {\n        endpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&language=en-US&query=\").concat(this.state.searchTerm, \"&page=\").concat(this.state.currentPage + 1);\n      }\n\n      this.fetchItems(endpoint);\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        console.log(result);\n        this.setState({\n          movies: [...this.state.movies, ...result.results],\n          heroImage: this.state.heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.totalPages\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=1\");\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rmdb-home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.heroImage ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(HeroImage, {\n      image: \"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(this.state.heroImage.backdrop_path),\n      title: this.state.heroImage.original_title,\n      text: this.state.heroImage.overview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(SearchBar, {\n      callback: this.searchItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"rmdb-home-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(FourColGrid, {\n      header: this.state.searchTerm ? 'Search Result' : 'Popular Movies',\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.movies.map((element, i) => {\n      return React.createElement(MovieThumb, {\n        key: i,\n        clickable: true,\n        image: element.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(element.poster_path) : './images/no_image.jpg',\n        movieId: element.id,\n        movieName: element.original_title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    })), !this.state.loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }) : null, this.state.currentPage <= this.state.totalPages && this.state.loading ? React.createElement(LoadMoreBtn, {\n      text: \"Load More\",\n      onClick: this.loadMoreItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:\\exercises\\testmoviedb\\React RMDB - Start Here\\src\\components\\Home\\Home.js"],"names":["React","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","HeroImage","SearchBar","FourColGrid","MovieThumb","LoadMoreBtn","Spinner","Home","Component","state","movies","heroimage","loading","currentPage","totalPages","searchTerm","searchItems","endpoint","setState","fetchItems","loadMoreItems","fetch","then","result","json","console","log","results","heroImage","page","componentDidMount","render","backdrop_path","original_title","overview","map","element","i","poster_path","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE} from \"../../config\"\r\nimport HeroImage from '../elements/HeroImage/HeroImage'\r\nimport SearchBar from '../elements/SearchBar/SearchBar'\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid'\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb'\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn'\r\nimport Spinner from '../elements/Spinner/Spinner'\r\nimport './Home.css';\r\n\r\n\r\nclass Home extends React.Component{\r\n    state= {\r\n\r\n        movies: [],\r\n        heroimage: null,\r\n        loading: false,\r\n        currentPage: 0,\r\n        totalPages: 0,\r\n        searchTerm: ''\r\n\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.setState({loading: true});\r\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n\r\n        this.fetchItems(endpoint);\r\n\r\n\r\n    }\r\n\r\n    searchItems = (searchTerm) => {\r\n        let endpoint = '';\r\n\r\n        this.setState({\r\n            movies: [],\r\n            loading: true,\r\n            searchTerm\r\n        })\r\n\r\n        if(searchTerm === ''){\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        }else {\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n        }\r\n\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        let endpoint = ''\r\n        this.setState({loading: true});\r\n\r\n        if(this.state.searchTerm ===''){\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage +1}`\r\n        } else {\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage +1}`\r\n        }\r\n\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n            console.log(result);\r\n            this.setState({\r\n                movies:[...this.state.movies, ...result.results],\r\n                heroImage: this.state.heroImage || result.results[0],\r\n                loading: false,\r\n                currentPage: result.page,\r\n                totalPages: result.totalPages\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className =\"rmdb-home\">\r\n            {this.state.heroImage ? \r\n            <div>\r\n                <HeroImage \r\n                    image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n                    title= {this.state.heroImage.original_title}\r\n                    text= {this.state.heroImage.overview}\r\n                />\r\n                <SearchBar callback={this.searchItems}/>\r\n            </div> : null}\r\n\r\n                <div className=\"rmdb-home-grid\">\r\n                    <FourColGrid \r\n                        header={this.state.searchTerm ? 'Search Result' : 'Popular Movies'}\r\n                        loading={this.state.loading}\r\n                    >\r\n                    {this.state.movies.map((element,i) => {\r\n                        return <MovieThumb\r\n                                    key={i}\r\n                                    clickable={true}\r\n                                    image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                                    movieId={element.id}\r\n                                    movieName={element.original_title}\r\n                                />\r\n                            })}\r\n                    </FourColGrid>\r\n                    {!this.state.loading ? <Spinner/> : null}\r\n                    {(this.state.currentPage <= this.state.totalPages && this.state.loading) ? \r\n                    <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems}/> \r\n                    : null }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}